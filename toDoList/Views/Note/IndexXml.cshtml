@using System.Xml;
<table>
    <tr>
        <td><a asp-controller="Note" asp-action="IndexXml" asp-route-FieldName="Status" asp-route-sort="true">Виконано</a></td>
        <td><a asp-controller="Note" asp-action="IndexXml" asp-route-FieldName="Name" asp-route-sort="true">Задача</a></td>
        <td><a asp-controller="Note" asp-action="IndexXml" asp-route-FieldName="CategoryId" asp-route-sort="true">Категорія</a></td>
        <td><a asp-controller="Note" asp-action="IndexXml" asp-route-FieldName="FinalDate" asp-route-sort="true">Дата</a></td>
    </tr>
    @{
        XmlDocument xmlDocument = new XmlDocument();
        xmlDocument.Load("Note.xml");
        XmlElement root = xmlDocument.DocumentElement;
        string routeStatus = "False";
        string id = "1";
    }
    @foreach (XmlElement element in root.ChildNodes)
    {
        <tr>
            @foreach (XmlNode child in element.ChildNodes)
            {
                @if (child.Name == "Id")
                {
                    id = child.InnerText;
                    continue;
                }
                @if (child.Name == "Status")
                {
                    @if (child.InnerText == "True")
                    {
                        <td style="color: green">&check;</td>
                    }
                    else if (child.InnerText == "False")
                    {
                        <td style="color: red">&cross;</td>
                    }
                    routeStatus = child.InnerText;
                    continue;
                }
                    <td>@child.InnerText</td>
                @if (child.Name == "FinalDate")
                {
                    <td>
                        <a asp-controller="Note" asp-action="CompletedXml" asp-route-Status="@routeStatus" asp-route-Id="@id">Виконано</a>
                    </td>
                }
            }
        </tr>
    }
</table>
